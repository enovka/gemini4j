# Logging Configuration for Gemini4j HTTP ClientService Library
# Handlers:
#   - Configure which handlers should be used to process log messages.
#   - 'java.util.logging.ConsoleHandler' logs to the console.
handlers=java.util.logging.ConsoleHandler
# Console Handler:
#   - 'level' defines the minimum log level to be output.
#   - 'formatter' specifies the format of log messages.
java.util.logging.ConsoleHandler.level=ALL
java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter
# Log Levels:
#   - Define the default log level for all loggers.
#   - Customize the level for specific packages or classes.
.level=DEBUG
# Package-level Logging:
#   - Set specific log levels for packages within the Gemini4j library.
com.enovka.gemini4j.level=DEBUG
# Class-level Logging:
#   - Set specific log levels for individual classes.
#   - Example: com.enovka.gemini4j.http.DefaultHttpClientService.level = FINER
#com.enovka.gemini4j.http.DefaultHttpClientService.level = FINER
# Custom Log Levels:
#   - Use 'ALL', 'FINEST', 'FINER', 'FINE', 'CONFIG', 'INFO', 'WARNING', 'SEVERE', 'OFF'.
#   - Higher levels include lower levels (e.g., FINE includes FINEST, FINER, etc.).
# Formatters:
#   - Customize the output format of log messages.
#   - Refer to the Java documentation for available formatter classes.
#   - Example: java.util.logging.ConsoleHandler.formatter = java.util.logging.XMLFormatter
#   - Example: java.util.logging.ConsoleHandler.formatter = com.enovka.gemini4j.log.CustomFormatter