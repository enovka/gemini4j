# This workflow will build a Java project with Maven
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Define the WireMock service
    services:
      wiremock:
        # Use the official WireMock Docker image
        image: wiremock/wiremock:latest
        # Map port 8089 from the container to the host
        ports:
          - 8089:8089
        # No need to specify bind address, the default HOST variable in the container is already set to 0.0.0.0

    steps:
      - uses: actions/checkout@v4
        # Check out the repository code

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11' # Use Java 11
          distribution: 'temurin'
          cache: maven
        # Set up JDK 11 and cache Maven dependencies

      - name: Build with Maven
        run: mvn -B package --file ${{ github.workspace }}/pom.xml
        # Run the Maven build

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6